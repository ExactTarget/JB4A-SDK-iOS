<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ETLocationManager.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ETLocationManager</TokenIdentifier>
			<Abstract type="html">ETLocationManager is the main interface to Salesforce&apos;s Location Services. In the way that ETPush manages the push notification cycle, ETLocationMangaer manages geo services. It will use some of the information from ETPush (namely, App ID and Access Token) to function, but is an independent piece of functionality.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
            
			
			<NodeRef refid="4"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/setUpdatingGeofences:</TokenIdentifier>
			<Abstract type="html">Keeps track of if we are currently in the middle of updating Geofences. That should only work one at a time.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=isUpdatingGeofences) BOOL updatingGeofences</Declaration>
			
			
			<Anchor>//api/name/updatingGeofences</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/isUpdatingGeofences</TokenIdentifier>
			<Abstract type="html">Keeps track of if we are currently in the middle of updating Geofences. That should only work one at a time.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=isUpdatingGeofences) BOOL updatingGeofences</Declaration>
			
			
			<Anchor>//api/name/updatingGeofences</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETLocationManager/updatingGeofences</TokenIdentifier>
			<Abstract type="html">Keeps track of if we are currently in the middle of updating Geofences. That should only work one at a time.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, getter=isUpdatingGeofences) BOOL updatingGeofences</Declaration>
			
			
			<Anchor>//api/name/updatingGeofences</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETLocationManager/locationManager</TokenIdentifier>
			<Abstract type="html">Returns a reference to the shared loc manager.
This method is deprecated. Please use sharedInstance instead.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>+ (ETLocationManager *)locationManager</Declaration>
			
			
			<Anchor>//api/name/locationManager</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETLocationManager/sharedInstance</TokenIdentifier>
			<Abstract type="html">  + Returns a reference to the shared ETLocationManager
  </Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>+ (instancetype)sharedInstance</Declaration>
			
			
			<Anchor>//api/name/sharedInstance</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/locationEnabled</TokenIdentifier>
			<Abstract type="html">Determines the state of Location Services based on developer setting and OS-level permission. This is the preferred method for checking for location state.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)locationEnabled</Declaration>
			
			
			<Anchor>//api/name/locationEnabled</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/startWatchingLocation</TokenIdentifier>
			<Abstract type="html">Use this method to initiate Location Services through the MobilePush SDK.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)startWatchingLocation</Declaration>
			
			
			<Anchor>//api/name/startWatchingLocation</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/stopWatchingLocation</TokenIdentifier>
			<Abstract type="html">Use this method to disable Location Services through the MobilePush SDK.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)stopWatchingLocation</Declaration>
			
			
			<Anchor>//api/name/stopWatchingLocation</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/appInForeground</TokenIdentifier>
			<Abstract type="html">Calls various handlers that should fire when the app enters the foreground.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)appInForeground</Declaration>
			
			
			<Anchor>//api/name/appInForeground</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/appInBackground</TokenIdentifier>
			<Abstract type="html">Calls various handlers that should fire when the app enters the background.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)appInBackground</Declaration>
			
			
			<Anchor>//api/name/appInBackground</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/updateLocationAndRetrieveMessages:forAppState:</TokenIdentifier>
			<Abstract type="html">Updates the current location and retrieves geo-fence messages.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)updateLocationAndRetrieveMessages:(CLLocation *)loc forAppState:(LocationUpdateAppState)state</Declaration>
			<Parameters>
				<Parameter>
					<Name>loc</Name>
					<Abstract type="html">a CLLocation value.</Abstract>
				</Parameter><Parameter>
					<Name>state</Name>
					<Abstract type="html">a LocationUpdateAppState value.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">no value returned.</Abstract></ReturnValue>
			<Anchor>//api/name/updateLocationAndRetrieveMessages:forAppState:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/monitorRegions:ofRequestType:</TokenIdentifier>
			<Abstract type="html">Takes in an NSSet of fences that should be monitored.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)monitorRegions:(NSSet *)fences ofRequestType:(ETRegionRequestType)requestType</Declaration>
			<Parameters>
				<Parameter>
					<Name>fences</Name>
					<Abstract type="html">The set to monitor.</Abstract>
				</Parameter><Parameter>
					<Name>requestType</Name>
					<Abstract type="html">ETRegionRequestType NS_ENUM value</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">void no return value.</Abstract></ReturnValue>
			<Anchor>//api/name/monitorRegions:ofRequestType:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/stopMonitoringRegions</TokenIdentifier>
			<Abstract type="html">Instructs the CLLocationManager to stop monitoring all regions.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)stopMonitoringRegions</Declaration>
			
			
			<Anchor>//api/name/stopMonitoringRegions</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/getAndScheduleAlertsForRegion:andMessageType:</TokenIdentifier>
			<Abstract type="html">Retrieves the messages for a given ETRegion and MobilePushMessageType and schedules any messages returned for display.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (void)getAndScheduleAlertsForRegion:(ETRegion *)region andMessageType:(MobilePushMessageType)type</Declaration>
			<Parameters>
				<Parameter>
					<Name>region</Name>
					<Abstract type="html">The ETRegion that prompted this action</Abstract>
				</Parameter><Parameter>
					<Name>type</Name>
					<Abstract type="html">The MobilePushMessageType of event that prompted this action.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/getAndScheduleAlertsForRegion:andMessageType:</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/monitoredRegions</TokenIdentifier>
			<Abstract type="html">Returns the currently monitored regions.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (NSSet *)monitoredRegions</Declaration>
			
			<ReturnValue><Abstract type="html">An NSSet of monitored regions.</Abstract></ReturnValue>
			<Anchor>//api/name/monitoredRegions</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/lastKnownLocation</TokenIdentifier>
			<Abstract type="html">A dictionary version of the Last Known Location. The dictionary will contain two keys, latitude and longitude, which are NSNumber wrappers around doubles. Use doubleValue to retrieve.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (NSDictionary *)lastKnownLocation</Declaration>
			
			
			<Anchor>//api/name/lastKnownLocation</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETLocationManager/getWatchingLocation</TokenIdentifier>
			<Abstract type="html">Returns if we are currently watching location.</Abstract>
			<DeclaredIn>ETLocationManager.h</DeclaredIn>
			
			<Declaration>- (BOOL)getWatchingLocation</Declaration>
			
			<ReturnValue><Abstract type="html">T/F if locations are being watched.</Abstract></ReturnValue>
			<Anchor>//api/name/getWatchingLocation</Anchor>
            <NodeRef refid="4"/>
		</Token>
		
        
        
	</File>
</Tokens>