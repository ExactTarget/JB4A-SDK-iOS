<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/ETRegion.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/ETRegion</TokenIdentifier>
			<Abstract type="html">ETRegion is a representation of a physical region that should trigger a message to be presented to the user. This could be either macro, a geofence, or micro, an iBeacon (marketing name: Proximity), but both go through iOS&apos; Location Manager, and are reported back to the SDK through the CLLocationManagerDelegate (which is currently always ETLocationManager.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
            
			
			<NodeRef refid="7"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setFenceIdentifier:</TokenIdentifier>
			<Abstract type="html">ET-generated identifier for the ETRegion in question. This should be treated as a primary key, and is stored on the device as the encoded version sent via the routes.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fenceIdentifier</Declaration>
			
			
			<Anchor>//api/name/fenceIdentifier</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/fenceIdentifier</TokenIdentifier>
			<Abstract type="html">ET-generated identifier for the ETRegion in question. This should be treated as a primary key, and is stored on the device as the encoded version sent via the routes.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fenceIdentifier</Declaration>
			
			
			<Anchor>//api/name/fenceIdentifier</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/fenceIdentifier</TokenIdentifier>
			<Abstract type="html">ET-generated identifier for the ETRegion in question. This should be treated as a primary key, and is stored on the device as the encoded version sent via the routes.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *fenceIdentifier</Declaration>
			
			
			<Anchor>//api/name/fenceIdentifier</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setLatitude:</TokenIdentifier>
			<Abstract type="html">The latitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latitude</Declaration>
			
			
			<Anchor>//api/name/latitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/latitude</TokenIdentifier>
			<Abstract type="html">The latitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latitude</Declaration>
			
			
			<Anchor>//api/name/latitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/latitude</TokenIdentifier>
			<Abstract type="html">The latitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *latitude</Declaration>
			
			
			<Anchor>//api/name/latitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setLongitude:</TokenIdentifier>
			<Abstract type="html">The longitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *longitude</Declaration>
			
			
			<Anchor>//api/name/longitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/longitude</TokenIdentifier>
			<Abstract type="html">The longitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *longitude</Declaration>
			
			
			<Anchor>//api/name/longitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/longitude</TokenIdentifier>
			<Abstract type="html">The longitude of this region. Saved in an NSNumber as a double for easy passing. Be sure to call doubleValue on this property.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *longitude</Declaration>
			
			
			<Anchor>//api/name/longitude</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setRadius:</TokenIdentifier>
			<Abstract type="html">For geofences only, the radius of the fence. This number, an integer, is in meters.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *radius</Declaration>
			
			
			<Anchor>//api/name/radius</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/radius</TokenIdentifier>
			<Abstract type="html">For geofences only, the radius of the fence. This number, an integer, is in meters.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *radius</Declaration>
			
			
			<Anchor>//api/name/radius</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/radius</TokenIdentifier>
			<Abstract type="html">For geofences only, the radius of the fence. This number, an integer, is in meters.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *radius</Declaration>
			
			
			<Anchor>//api/name/radius</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setMessages:</TokenIdentifier>
			<Abstract type="html">An array of related messages. It is not proper to pull a message out of this array, though. It&apos;s used for initialization and data passing.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messages</Declaration>
			
			
			<Anchor>//api/name/messages</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/messages</TokenIdentifier>
			<Abstract type="html">An array of related messages. It is not proper to pull a message out of this array, though. It&apos;s used for initialization and data passing.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messages</Declaration>
			
			
			<Anchor>//api/name/messages</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/messages</TokenIdentifier>
			<Abstract type="html">An array of related messages. It is not proper to pull a message out of this array, though. It&apos;s used for initialization and data passing.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSMutableArray *messages</Declaration>
			
			
			<Anchor>//api/name/messages</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setProximityUUID:</TokenIdentifier>
			<Abstract type="html">For beacons, the Proximity UUID of the beacon.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *proximityUUID</Declaration>
			
			
			<Anchor>//api/name/proximityUUID</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/proximityUUID</TokenIdentifier>
			<Abstract type="html">For beacons, the Proximity UUID of the beacon.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *proximityUUID</Declaration>
			
			
			<Anchor>//api/name/proximityUUID</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/proximityUUID</TokenIdentifier>
			<Abstract type="html">For beacons, the Proximity UUID of the beacon.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *proximityUUID</Declaration>
			
			
			<Anchor>//api/name/proximityUUID</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setMajorNumber:</TokenIdentifier>
			<Abstract type="html">For beacons, the Major number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *majorNumber</Declaration>
			
			
			<Anchor>//api/name/majorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/majorNumber</TokenIdentifier>
			<Abstract type="html">For beacons, the Major number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *majorNumber</Declaration>
			
			
			<Anchor>//api/name/majorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/majorNumber</TokenIdentifier>
			<Abstract type="html">For beacons, the Major number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *majorNumber</Declaration>
			
			
			<Anchor>//api/name/majorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setMinorNumber:</TokenIdentifier>
			<Abstract type="html">For beacons, the Minor number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minorNumber</Declaration>
			
			
			<Anchor>//api/name/minorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/minorNumber</TokenIdentifier>
			<Abstract type="html">For beacons, the Minor number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minorNumber</Declaration>
			
			
			<Anchor>//api/name/minorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/minorNumber</TokenIdentifier>
			<Abstract type="html">For beacons, the Minor number. This is a uint32 per the CLBeaconRegion spec.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *minorNumber</Declaration>
			
			
			<Anchor>//api/name/minorNumber</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setEntryCount:</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is entered as counted by the ETLocationManager.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *entryCount</Declaration>
			
			
			<Anchor>//api/name/entryCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/entryCount</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is entered as counted by the ETLocationManager.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *entryCount</Declaration>
			
			
			<Anchor>//api/name/entryCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/entryCount</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is entered as counted by the ETLocationManager.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *entryCount</Declaration>
			
			
			<Anchor>//api/name/entryCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setExitCount:</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is exited as counted by the ETLocationManager. Ideally, it matches enter count.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *exitCount</Declaration>
			
			
			<Anchor>//api/name/exitCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/exitCount</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is exited as counted by the ETLocationManager. Ideally, it matches enter count.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *exitCount</Declaration>
			
			
			<Anchor>//api/name/exitCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/exitCount</TokenIdentifier>
			<Abstract type="html">This is the number of times a region is exited as counted by the ETLocationManager. Ideally, it matches enter count.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSNumber *exitCount</Declaration>
			
			
			<Anchor>//api/name/exitCount</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setRegionName:</TokenIdentifier>
			<Abstract type="html">This is the name which is set on SalesforceMarketingCloud, while setting the ETRegion</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *regionName</Declaration>
			
			
			<Anchor>//api/name/regionName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/regionName</TokenIdentifier>
			<Abstract type="html">This is the name which is set on SalesforceMarketingCloud, while setting the ETRegion</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *regionName</Declaration>
			
			
			<Anchor>//api/name/regionName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/regionName</TokenIdentifier>
			<Abstract type="html">This is the name which is set on SalesforceMarketingCloud, while setting the ETRegion</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, strong) NSString *regionName</Declaration>
			
			
			<Anchor>//api/name/regionName</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setLocationType:</TokenIdentifier>
			<Abstract type="html">The type of region this ETRegion represents. This is sent from the server, so we trust it.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) MobilePushGeofenceType locationType</Declaration>
			
			
			<Anchor>//api/name/locationType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/locationType</TokenIdentifier>
			<Abstract type="html">The type of region this ETRegion represents. This is sent from the server, so we trust it.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) MobilePushGeofenceType locationType</Declaration>
			
			
			<Anchor>//api/name/locationType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/locationType</TokenIdentifier>
			<Abstract type="html">The type of region this ETRegion represents. This is sent from the server, so we trust it.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic, assign) MobilePushGeofenceType locationType</Declaration>
			
			
			<Anchor>//api/name/locationType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/setRequestType:</TokenIdentifier>
			<Abstract type="html">For ETGenericUpdate, this is the type of request that is being initiated. It will soon be deprecated.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) ETRegionRequestType requestType</Declaration>
			
			
			<Anchor>//api/name/requestType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/requestType</TokenIdentifier>
			<Abstract type="html">For ETGenericUpdate, this is the type of request that is being initiated. It will soon be deprecated.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) ETRegionRequestType requestType</Declaration>
			
			
			<Anchor>//api/name/requestType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instp/ETRegion/requestType</TokenIdentifier>
			<Abstract type="html">For ETGenericUpdate, this is the type of request that is being initiated. It will soon be deprecated.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>@property (nonatomic) ETRegionRequestType requestType</Declaration>
			
			
			<Anchor>//api/name/requestType</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/initFromDictionary:</TokenIdentifier>
			<Abstract type="html">This is the designated initializer. Pass it in a dictionary, get out an ETRegion.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (id)initFromDictionary:(NSDictionary *)dict</Declaration>
			<Parameters>
				<Parameter>
					<Name>dict</Name>
					<Abstract type="html">NSDictionary of values of which to apply to this ETRegion.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">A newly minted ETRegion.</Abstract></ReturnValue>
			<Anchor>//api/name/initFromDictionary:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/isEqualToRegion:</TokenIdentifier>
			<Abstract type="html">Region equality. Based on the kind of ETRegion, it will compare values and determine equality.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (BOOL)isEqualToRegion:(ETRegion *)region</Declaration>
			<Parameters>
				<Parameter>
					<Name>region</Name>
					<Abstract type="html">a ETRegion value. The other ETRegion to which the comparison should be made.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">BOOL T/F of equality.</Abstract></ReturnValue>
			<Anchor>//api/name/isEqualToRegion:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/regionAsLocation</TokenIdentifier>
			<Abstract type="html">This returns a CLLocation representation of the current ETRegion, or nil if a beacon.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (CLLocation *)regionAsLocation</Declaration>
			
			<ReturnValue><Abstract type="html">The region as a CLLocation.</Abstract></ReturnValue>
			<Anchor>//api/name/regionAsLocation</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/regionAsCLRegion</TokenIdentifier>
			<Abstract type="html">Returns the ETRegion as a CLRegion for use in Beacon code, or nil if a Geofence.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (CLRegion *)regionAsCLRegion</Declaration>
			
			<ReturnValue><Abstract type="html">A CLRegion representation of self.</Abstract></ReturnValue>
			<Anchor>//api/name/regionAsCLRegion</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/regionAsBeaconRegion</TokenIdentifier>
			<Abstract type="html">Returns self as a CLBeaconRegion, or nil if a Geofence.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (CLBeaconRegion *)regionAsBeaconRegion</Declaration>
			
			<ReturnValue><Abstract type="html">CLBeaconRegion representation of self.</Abstract></ReturnValue>
			<Anchor>//api/name/regionAsBeaconRegion</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/isGeofenceRegion</TokenIdentifier>
			<Abstract type="html">Helper to quickly determine if this is a Geofence region.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (BOOL)isGeofenceRegion</Declaration>
			
			<ReturnValue><Abstract type="html">T/F if a geofence.</Abstract></ReturnValue>
			<Anchor>//api/name/isGeofenceRegion</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/instm/ETRegion/isBeaconRegion</TokenIdentifier>
			<Abstract type="html">Helper to quickly determine if this is a Beacon/Proximity region.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>- (BOOL)isBeaconRegion</Declaration>
			
			<ReturnValue><Abstract type="html">T/F if a beacon.</Abstract></ReturnValue>
			<Anchor>//api/name/isBeaconRegion</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/getRegionByIdentifier:</TokenIdentifier>
			<Abstract type="html">Returns a specific ETRegion by the ET-provided identifier, or nil if it doesn&apos;t exist.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (ETRegion *)getRegionByIdentifier:(NSString *)identifier</Declaration>
			<Parameters>
				<Parameter>
					<Name>identifier</Name>
					<Abstract type="html">The region ID to retrieve.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The region, or nil if it doesn&apos;t exist.</Abstract></ReturnValue>
			<Anchor>//api/name/getRegionByIdentifier:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/getBeaconRegionForRegionWithProximityUUID:andMajorNumber:andMinorNumber:</TokenIdentifier>
			<Abstract type="html">Returns a specific Beacon Region from the database. This is more useful for ranging, since at that time we don&apos;t know the ET identifier yet, but we know UUID, Major and Minor.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (ETRegion *)getBeaconRegionForRegionWithProximityUUID:(NSString *)proximityUUID andMajorNumber:(NSNumber *)majorNumber andMinorNumber:(NSNumber *)minorNumber</Declaration>
			<Parameters>
				<Parameter>
					<Name>proximityUUID</Name>
					<Abstract type="html">The ranged beacon UUID</Abstract>
				</Parameter><Parameter>
					<Name>majorNumber</Name>
					<Abstract type="html">An NSNumber-wrapped uint32 of the beacon&apos;s major number</Abstract>
				</Parameter><Parameter>
					<Name>minorNumber</Name>
					<Abstract type="html">An NSNumber-wrapped uint32 of the beacon&apos;s minor number</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The region, or nil if it doesn&apos;t exist.</Abstract></ReturnValue>
			<Anchor>//api/name/getBeaconRegionForRegionWithProximityUUID:andMajorNumber:andMinorNumber:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/getBeaconRegionForRegionWithProximityUUID:</TokenIdentifier>
			<Abstract type="html">Returns a specific Beacon Region from the database.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (ETRegion *)getBeaconRegionForRegionWithProximityUUID:(NSString *)proximityUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>proximityUUID</Name>
					<Abstract type="html">The ranged beacon region UUID</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">The region, or nil if it doesn&apos;t exist.</Abstract></ReturnValue>
			<Anchor>//api/name/getBeaconRegionForRegionWithProximityUUID:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/getFencesFromCache</TokenIdentifier>
			<Abstract type="html">Pulls all active regions out of the local database.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (NSSet *)getFencesFromCache</Declaration>
			
			<ReturnValue><Abstract type="html">An NSSet of ETRegions.</Abstract></ReturnValue>
			<Anchor>//api/name/getFencesFromCache</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/getFencesFromCacheIncludingInactive:</TokenIdentifier>
			<Abstract type="html">Pulls all (both active and inactive) regions out of the local database.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (NSSet *)getFencesFromCacheIncludingInactive:(BOOL)getInactive</Declaration>
			<Parameters>
				<Parameter>
					<Name>getInactive</Name>
					<Abstract type="html">a BOOL value.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">An NSSet of all ETRegions.</Abstract></ReturnValue>
			<Anchor>//api/name/getFencesFromCacheIncludingInactive:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/invalidateAllRegionsForRequestType:</TokenIdentifier>
			<Abstract type="html">Marks all regions in the database for a specific type as inactive. This is done after successfully retrieving fences from Salesforce.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (BOOL)invalidateAllRegionsForRequestType:(ETRegionRequestType)requestType</Declaration>
			<Parameters>
				<Parameter>
					<Name>requestType</Name>
					<Abstract type="html">Filter to only invalidate certain types of region based on ET Request.</Abstract>
				</Parameter>
			</Parameters>
			<ReturnValue><Abstract type="html">T/F if the process was successful.</Abstract></ReturnValue>
			<Anchor>//api/name/invalidateAllRegionsForRequestType:</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/invalidateAllRegions</TokenIdentifier>
			<Abstract type="html">Invalidates all reason. Full stop.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (BOOL)invalidateAllRegions</Declaration>
			
			<ReturnValue><Abstract type="html">T/F of the success of the operation.</Abstract></ReturnValue>
			<Anchor>//api/name/invalidateAllRegions</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/retrieveGeofencesFromET</TokenIdentifier>
			<Abstract type="html">Begins fence retrieval from ET of Geofences.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (void)retrieveGeofencesFromET</Declaration>
			
			
			<Anchor>//api/name/retrieveGeofencesFromET</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/retrieveProximityFromET</TokenIdentifier>
			<Abstract type="html">Begins fence retrieval from ET of Beacons.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (void)retrieveProximityFromET</Declaration>
			
			
			<Anchor>//api/name/retrieveProximityFromET</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/ETRegion/generatePersistentDataSchemaInDatabase</TokenIdentifier>
			<Abstract type="html">Passes a call to the Static method of the same name, with the correct object named in the instance variable. It needed an instance counterpart because we are dealing with a specific update at the point where this is called, and that&apos;s the perfect place to reference back to the static version.</Abstract>
			<DeclaredIn>ETRegion.h</DeclaredIn>
			
			<Declaration>+ (BOOL)generatePersistentDataSchemaInDatabase</Declaration>
			
			
			<Anchor>//api/name/generatePersistentDataSchemaInDatabase</Anchor>
            <NodeRef refid="7"/>
		</Token>
		
        
        
	</File>
</Tokens>